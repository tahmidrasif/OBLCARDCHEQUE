@model IEnumerable<CardChequeModule.Models.CARDCHTRAN>

@using System.Activities.Expressions
@using PagedList
@using PagedList.Mvc

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@{
    ViewBag.Title = "CardChequePendingRequest";
}

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title"><span class="glyphicon glyphicon-search"> <strong>Search</strong></span> </h3>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm("CardChequePendingRequest", "Home", new { @class = "form-horizontal", area = "Authorizer" }))
        {

            <div class="form-group">
                <label class="col-sm-1 control-label">Status</label>
                <div class="col-sm-3">

                    @Html.DropDownList("STATUS", ViewBag.STATUS as SelectList, "Select Status", new { @class = "form-control" })
                </div>
                <label class="col-sm-1 control-label">Card Number</label>
                <div class="col-sm-3">
                    <input type="text" id="CARDNO" name="CARDNO" class="form-control" />
                </div>
                <label class="col-sm-1 control-label">Date</label>
                <div class="col-sm-3">
                    <div class='input-group date' id='datetimepicker1'>
                        <input type="text" id="CREATEDON" name="CREATEDON" class="form-control" />

                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>

            </div>

            <div class="form-group">
                <label class="col-sm-11 control-label"></label>
                <div class="col-sm-1">
                    <button class="btn btn-info" type="submit">Search</button>
                </div>
            </div>
        }
    </div>
</div>



@using (Html.BeginForm("CardChAuthPost", "Home", new { area = "Authorizer" }, FormMethod.Post, new { @class = "form-horizontal", id = "cardChequeAuthForm" }))
{
    @*@Html.AntiForgeryToken()

    @Html.ValidationSummary(true)*@

    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title"><span class="glyphicon glyphicon-list"> Card Cheque Pending</span> </h3>
        </div>
        <div class="panel-body">


            <table class="table table-striped" id="myTable">
                <thead>

                    <tr>
                        @if (Model.Any(x => x.STATUS == 13))
                        {
                            <th>
                                <input type="checkbox" id="checkall" />
                            </th>
                        }
                        else
                        {
                            <th>

                            </th>
                        }

                        <th>
                            @Html.DisplayNameFor(model => model.CARDNO)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BRANCHINFO.BRANCHNAME)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AMOUNT)
                        </th>
                        <th>
                            @Html.DisplayName("Issued By")
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.REQUESTDATE)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BENEFICIARINFO)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CARDCHLEAF.LEAFNO)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.APPROVALNO)
                        </th>


                    </tr>

                </thead>

                <tbody>

                    @foreach (var item in Model.Select((x, i) => new { Data = x, Index = i }))
                    {

                        <tr class="@( item.Data.STATUS == 13  ? "danger" : "success")">
                            @if (item.Data.STATUS == 13)
                            {
                                <td>
                                    @*<input type="checkbox" class="checkBoxClass" name="[@item.Index].ID" id="idList" value="@item.Data.ID" />*@
                                    <input type="checkbox" class="checkBoxClass" name="ID" value="@item.Data.ID" id="@item.Index" />
                                    @*<input type="checkbox" class="checkBoxClass" name="ID[@item.Index]" id="@item.Index+ID" value="@item.Data.ID" />*@
                                </td>
                            }
                            else
                            {
                                <td></td>
                            }

                            <td>
                                @Html.DisplayFor(modelItem => item.Data.CARDNO)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Data.BRANCHINFO.BRANCHNAME)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Data.AMOUNT)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Data.OCCUSER.USERNAME)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Data.REQUESTDATE, new { @Value = item.Data.CREATEDON.ToString("dd-MM-yyyy") })
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Data.BENEFICIARINFO)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Data.CARDCHLEAF.LEAFNO)
                            </td>

                            @if (item.Data.STATUS == 13)
                            {
                                <td>

                                    <input type="text" class="form-control approvalClass @item.Index" name="APPROVALNO" id="@item.Index" />
                                    @*<input type="text" class="form-control approvalClass" id="@item.Index+APPROVALNO" name="APPROVALNO[@item.Index]" />*@
                                    @*<input type="text" class="form-control approvalClass"  name="APPROVALNO" />*@

                                 </td>
                            }
                            else
                            {
                                <td>
                                    @Html.DisplayFor(x => item.Data.APPROVALNO)
                                </td>
                            }


                        </tr>

                    }

                </tbody>


            </table>
            @if (Model.Any())
            {
                <div class="form-group">
                    <label class="col-sm-11 control-label"></label>
                    <div class="col-sm-1">
                        <button class="btn btn-success" type="submit" id="Assign">Save</button>
                    </div>
                </div>
            }

        </div>
    </div>

}


<div class="col-lg-12">
    @Html.PagedListPager((IPagedList)Model, page => Url.Action("CardChequePendingRequest", "Home",
        new { page, STATUS = ViewBag.currentStatus, CARDNO = ViewBag.currentCardNo, CREATEDON = ViewBag.currentDate }))




</div>
<div style="color: red" id="validatorMessage"></div>



@section scripts{
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script>

        $('.checkBoxClass').change(function() {
            var isChecked = this.checked;

            if (isChecked) {
                $(this).parents("tr").find("input:text").prop("disabled", false);

            } else {
                $(this).parents("tr").find("input:text").prop("disabled", true);
                $(this).parents("tr").find("input:text").val('');
            }

        });

        //intial button & Textbox disabled
        $('#Assign').prop("disabled", true);
        $("#myTable tbody tr input:text").prop("disabled", true);

        //select all
        $("#checkall").change(function() {
            $("input:checkbox").prop('checked', $(this).prop("checked"));

        });

        //check box click button enable disable
        $(function() {
            var checkboxes = $(':checkbox:not(#checkall)').click(function(event) {
                $('#Assign').prop("disabled", checkboxes.filter(':checked').length == 0);


            });

            $('#checkall').click(function(event) {
                checkboxes.prop('checked', this.checked);
                $('#Assign').prop("disabled", !this.checked);
                $("tr td input:text").prop('disabled', !this.checked);
            });
        });

  
        jQuery.validator.addClassRules({
            approvalClass: {
                required: true
            },
        });
             
        $('#cardChequeAuthForm').validate();
       

    </script>
}

@section DatetimeCss{

    <link href="~/Content/bootstrap-datetimepicker.min.css" rel="stylesheet" />

}
@section DateTimeJs{

    <script src="~/Scripts/moment.min.js"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.min.js"></script>

    <script type="text/javascript">
        $(function () {
            $('#datetimepicker1').datetimepicker({
                format: 'MM/DD/YYYY'
            });

        });


    </script>
}
